// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: tokens.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createToken = `-- name: CreateToken :one
insert into refresh_tokens (token, created_at, updated_at, user_id)
values ($1, now(), now(), $2)
returning token, created_at, updated_at, user_id, expired_at, revoked_at
`

type CreateTokenParams struct {
	Token  string
	UserID uuid.UUID
}

func (q *Queries) CreateToken(ctx context.Context, arg CreateTokenParams) (RefreshToken, error) {
	row := q.db.QueryRowContext(ctx, createToken, arg.Token, arg.UserID)
	var i RefreshToken
	err := row.Scan(
		&i.Token,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.ExpiredAt,
		&i.RevokedAt,
	)
	return i, err
}

const removeAllTokens = `-- name: RemoveAllTokens :exec
delete from refresh_tokens
`

func (q *Queries) RemoveAllTokens(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, removeAllTokens)
	return err
}
